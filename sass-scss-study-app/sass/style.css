@charset "UTF-8";
/* Создаем переменные  */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  font-size: 16px;
  font-family: "Montserrat", sans-serif;
  color: #000;
  width: 100%;
  min-height: 100%;
  /* Миксин, похоже на функцию по синтаксису и по действию, передаем переменную и она в подготовленном коде используется */
}
@media only screen and (min-width: 768px) {
  html,
  body {
    /* Вызываем миксин */
    font-size: 22px;
  }
}

body {
  padding: 20px;
  background-color: #4a90e2;
}

section {
  background-color: #f2f2f2;
  width: 90%;
  max-width: 700px;
  margin: auto;
  border: 1px solid #000;
  border-radius: 10px;
}

/* Это надо чтобы использовать переменные или миксины из модуля */
.button {
  width: 15%;
  min-width: 48px;
  min-height: 48px;
  color: #fff; /* Вот так забираем переменную из конкретного модуля */
  border: 2px solid lightgray;
  border-radius: 10px;
  outline: none;
  border-bottom: #4a90e2;
}

.button:hover {
  cursor: pointer;
}

.button:hover,
.button:focus {
  filter: brightness(120%);
  box-shadow: 4px 2px 5px #000;
}

/* Создаем переменные  */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  font-size: 16px;
  font-family: "Montserrat", sans-serif;
  color: #000;
  width: 100%;
  min-height: 100%;
  /* Миксин, похоже на функцию по синтаксису и по действию, передаем переменную и она в подготовленном коде используется */
}

@media only screen and (min-width: 768px) {
  html,
  body {
    /* Вызываем миксин */
    font-size: 22px;
  }
}
body {
  padding: 20px;
  background-color: #4a90e2;
}

section {
  background-color: #f2f2f2;
  width: 90%;
  max-width: 700px;
  margin: auto;
  border: 1px solid #000;
  border-radius: 10px;
}

.newItemEntry {
  /* Вложенная структура. Настройки примененные к вложенным элементам даже с глобальным обращение типа button будут применены только к вложенному элементу */
  position: sticky;
  top: 0; /* С помощью этих двух настроек секция с добавление новой задачи не проскролится если список будет длинный */
  margin-bottom: 1rem;
  padding: 0.75rem;
}
.newItemEntry form {
  display: flex;
  justify-content: space-between; /* С этими настройками кнопка и инпут отойдут на разные края насколько возможно */
}
.newItemEntry form label {
  position: absolute;
  left: -10000px; /*  Уберет лейбл с экрана, для обычного пользователя ничего не будет, а сам лейбл нужен для скрин ридеров, они когда табаться будут смогут его прочитать */
}
.newItemEntry form input[type=text] {
  /* Сделали более специфичный выбор по типу инпута */
  width: 80%;
  font-size: 1.25rem;
  border: 2px solid lightgray;
  border-radius: 10px;
  padding: 0.75rem;
  outline: none;
}
.newItemEntry form input[type=text]:focus,
.newItemEntry form input[type=text]:hover {
  box-shadow: 4px 2px 5px #000;
}
.newItemEntry form button {
  font-size: 1.25rem;
  background-color: #4caf50;
  padding: 0.75rem;
  /* Миксин, похоже на функцию по синтаксису и по действию, передаем переменную и она в подготовленном коде используется */
}
@media only screen and (min-width: 768px) {
  .newItemEntry form button {
    font-size: 1.5rem;
  }
}

/* Создаем переменные  */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  font-size: 16px;
  font-family: "Montserrat", sans-serif;
  color: #000;
  width: 100%;
  min-height: 100%;
  /* Миксин, похоже на функцию по синтаксису и по действию, передаем переменную и она в подготовленном коде используется */
}

@media only screen and (min-width: 768px) {
  html,
  body {
    /* Вызываем миксин */
    font-size: 22px;
  }
}
body {
  padding: 20px;
  background-color: #4a90e2;
}

section {
  background-color: #f2f2f2;
  width: 90%;
  max-width: 700px;
  margin: auto;
  border: 1px solid #000;
  border-radius: 10px;
}

.listContainer {
  min-height: 60vh;
  padding: 0.75rem;
}
.listContainer .listTitle {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
.listContainer .listTitle button {
  font-size: 1rem;
  background-color: #9f6060;
  padding: 0 0.1rem;
  margin-bottom: 0.5rem;
  /* Миксин, похоже на функцию по синтаксису и по действию, передаем переменную и она в подготовленном коде используется */
}
@media only screen and (min-width: 768px) {
  .listContainer .listTitle button {
    padding: 0 0.5rem;
  }
}
.listContainer .listTitle button hr {
  width: 100%;
}
.listContainer .item {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  padding-top: 1rem;
}
.listContainer .item input[type=checkbox] {
  text-align: center;
  width: 2.5rem;
  min-width: 48px;
  height: 2.5rem;
  min-height: 48px;
  cursor: pointer;
  margin-right: 1.5rem;
}
.listContainer .item input[type=checkbox]:focus + label {
  /* + label чтобы добавить насройки тексту заданий, потому что они как раз в лабле а фокус для скрин ридеров когда через таб проссматривают */
  text-decoration: underline;
}
.listContainer .item label {
  font-size: 1.1rem;
}/*# sourceMappingURL=style.css.map */